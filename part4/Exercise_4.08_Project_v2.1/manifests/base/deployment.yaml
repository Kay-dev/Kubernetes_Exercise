apiVersion: apps/v1
kind: Deployment
metadata:
  name: broadcaster-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broadcaster
  template:
    metadata:
      labels:
        app: broadcaster
    spec:
      containers:
        - name: broadcaster
          image: BROADCASTER_IMAGE
          imagePullPolicy: Always
          env:
            - name: NATS_URL
              value: "nats://nats:4222"
            - name: TELEGRAM_TOKEN
              valueFrom:
                secretKeyRef:
                  name: sealed-secret
                  key: TELEGRAM_TOKEN
            - name: TELEGRAM_CHAT_ID
              valueFrom:
                secretKeyRef:
                  name: sealed-secret
                  key: TELEGRAM_CHAT_ID

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-project-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todo-project

  template:
    metadata:
      labels:
        app: todo-project
    spec:
      volumes:
        - name: shared-image
          persistentVolumeClaim:
            claimName: project-claim
      containers:
        - name: todo-app
          image: TODO_APP_IMAGE
          imagePullPolicy: Always
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PORT
              value: "3003"
          volumeMounts:
            - name: shared-image
              mountPath: /usr/src/app/files
          readinessProbe:
            httpGet:
              path: /healthz
              port: 3003
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3003
            initialDelaySeconds: 20
            periodSeconds: 5
        - name: todo-backend
          image: TODO_BACKEND_IMAGE
          imagePullPolicy: Always
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 3004
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3004
            initialDelaySeconds: 20
            periodSeconds: 5
          env:
            - name: NATS_URL
              value: "nats://nats:4222"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: sealed-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sealed-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: POSTGRES_DB
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: POSTGRES_PORT
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: POSTGRES_HOST
