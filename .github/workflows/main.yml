name: 'Build and Deploy to GKE'

on:
  push:

env:
  PROJECT_ID: 'pingpong-436120' # TODO: update to your Google Cloud project ID
  GAR_LOCATION: 'us-central1' # TODO: update to your region
  GKE_CLUSTER: 'autopilot-cluster-3' # TODO: update to your cluster name
  GKE_ZONE: 'us-central1' # TODO: update to your cluster zone
  DEPLOYMENT_NAME: 'gke-project' # TODO: update to your deployment name
  TODO_APP_IMAGE: 'todo-app'
  TODO_BACKEND_IMAGE: 'todo-backend'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/889674839625/locations/global/workloadIdentityPools/github/providers/my-repo'
  BRANCH: ${{ github.ref_name }}

jobs:
  setup-build-publish-deploy:
    name: 'Setup, Build, Publish, and Deploy'
    runs-on: 'ubuntu-latest'
    environment: 'production'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # actions/checkout@v4

      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@f112390a2df9932162083945e46d439060d66ec2' # google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: 'github-actions@pingpong-436120.iam.gserviceaccount.com'

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Use gcloud CLI'
        run: gcloud info

      - run: gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - name: 'Set up GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@6051de21ad50fbb1767bc93c11357a49082ad116' # google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          project_id: ${{ env.PROJECT_ID }}
          location: ${{ env.GKE_ZONE }}

      # Build the Docker image
      - name: Build and publish
        run: |-
          cd part3/Exercise_3.03_Project_v1.4/Todo-app
          docker build --tag "gcr.io/$PROJECT_ID/$TODO_APP_IMAGE:$BRANCH-$GITHUB_SHA" .
          cd ../Todo-backend
          docker build --tag "gcr.io/$PROJECT_ID/$TODO_BACKEND_IMAGE:$BRANCH-$GITHUB_SHA" .
          cd ../
          docker push "gcr.io/$PROJECT_ID/$TODO_APP_IMAGE:$BRANCH-$GITHUB_SHA"
          docker push "gcr.io/$PROJECT_ID/$TODO_BACKEND_IMAGE:$BRANCH-$GITHUB_SHA"
      # Set up kustomize
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2

      # Deploy the Docker image to the GKE cluster
      - name: 'Deploy to GKE'
        run: |-
          kustomize edit set image TODO_APP_IMAGE=gcr.io/$PROJECT_ID/$TODO_APP_IMAGE:$BRANCH-$GITHUB_SHA TODO_BACKEND_IMAGE=gcr.io/$PROJECT_ID/$TODO_BACKEND_IMAGE:$BRANCH-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide